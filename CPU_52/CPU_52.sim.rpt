Simulator report for CPU_52
Sun Jan 21 21:09:04 2024
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 65 nodes     ;
; Simulation Coverage         ;      14.29 % ;
; Total Number of Transitions ; 1357         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone      ;
+-----------------------------+--------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                        ;
+--------------------------------------------------------------------------------------------+--------------+---------------+
; Option                                                                                     ; Setting      ; Default Value ;
+--------------------------------------------------------------------------------------------+--------------+---------------+
; Simulation mode                                                                            ; Functional   ; Timing        ;
; Start time                                                                                 ; 0 ns         ; 0 ns          ;
; Simulation results format                                                                  ; CVWF         ;               ;
; Vector input source                                                                        ; ADR_ALUU.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On           ; On            ;
; Check outputs                                                                              ; Off          ; Off           ;
; Report simulation coverage                                                                 ; On           ; On            ;
; Display complete 1/0 value coverage report                                                 ; On           ; On            ;
; Display missing 1-value coverage report                                                    ; On           ; On            ;
; Display missing 0-value coverage report                                                    ; On           ; On            ;
; Detect setup and hold time violations                                                      ; Off          ; Off           ;
; Detect glitches                                                                            ; Off          ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off          ; Off           ;
; Generate Signal Activity File                                                              ; Off          ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off          ; Off           ;
; Group bus channels in simulation results                                                   ; Off          ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On           ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE   ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off          ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off          ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto         ; Auto          ;
+--------------------------------------------------------------------------------------------+--------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      14.29 % ;
; Total nodes checked                                 ; 65           ;
; Total output ports checked                          ; 70           ;
; Total output ports with complete 1/0-value coverage ; 10           ;
; Total output ports with no 1/0-value coverage       ; 60           ;
; Total output ports with no 1-value coverage         ; 60           ;
; Total output ports with no 0-value coverage         ; 60           ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                ;
+--------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                  ; Output Port Name                                                                           ; Output Port Type ;
+--------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------+------------------+
; |ADR_ALU|result[0]                                                                         ; |ADR_ALU|result[0]                                                                         ; pin_out          ;
; |ADR_ALU|op_Code[0]                                                                        ; |ADR_ALU|op_Code[0]                                                                        ; out              ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[5]~4  ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[5]~4  ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[5]~5  ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[5]~5  ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[2]~10 ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[2]~10 ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[2]~11 ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[2]~11 ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[1]~12 ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[1]~12 ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[1]~13 ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[1]~13 ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[0]~14 ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[0]~14 ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[0]    ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[0]    ; out0             ;
+--------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                                                                 ;
+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                         ; Output Port Name                                                                                                  ; Output Port Type ;
+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------+
; |ADR_ALU|result[7]                                                                                                ; |ADR_ALU|result[7]                                                                                                ; pin_out          ;
; |ADR_ALU|result[6]                                                                                                ; |ADR_ALU|result[6]                                                                                                ; pin_out          ;
; |ADR_ALU|result[5]                                                                                                ; |ADR_ALU|result[5]                                                                                                ; pin_out          ;
; |ADR_ALU|result[4]                                                                                                ; |ADR_ALU|result[4]                                                                                                ; pin_out          ;
; |ADR_ALU|result[3]                                                                                                ; |ADR_ALU|result[3]                                                                                                ; pin_out          ;
; |ADR_ALU|result[2]                                                                                                ; |ADR_ALU|result[2]                                                                                                ; pin_out          ;
; |ADR_ALU|result[1]                                                                                                ; |ADR_ALU|result[1]                                                                                                ; pin_out          ;
; |ADR_ALU|A[7]                                                                                                     ; |ADR_ALU|A[7]                                                                                                     ; out              ;
; |ADR_ALU|A[6]                                                                                                     ; |ADR_ALU|A[6]                                                                                                     ; out              ;
; |ADR_ALU|A[5]                                                                                                     ; |ADR_ALU|A[5]                                                                                                     ; out              ;
; |ADR_ALU|A[4]                                                                                                     ; |ADR_ALU|A[4]                                                                                                     ; out              ;
; |ADR_ALU|A[3]                                                                                                     ; |ADR_ALU|A[3]                                                                                                     ; out              ;
; |ADR_ALU|A[2]                                                                                                     ; |ADR_ALU|A[2]                                                                                                     ; out              ;
; |ADR_ALU|A[1]                                                                                                     ; |ADR_ALU|A[1]                                                                                                     ; out              ;
; |ADR_ALU|A[0]                                                                                                     ; |ADR_ALU|A[0]                                                                                                     ; out              ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[7]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[7]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[6]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[6]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[5]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[5]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[4]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[4]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[3]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[3]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[2]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[2]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[1]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[1]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~18                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~18                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~19                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~19                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~20                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~20                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~21                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~21                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~22                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~22                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~23                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~23                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~24                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~24                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[7] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[7] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[6]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[5]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[4]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[3]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[2]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[1]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[0]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; sout             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]~0                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]~0                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]~1                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]~1                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]~2                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]~2                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]~3                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]~3                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[5]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[5]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]~6                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]~6                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]~7                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]~7                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]~8                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]~8                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]~9                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]~9                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[2]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[2]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[1]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[1]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[0]~15                        ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[0]~15                        ; out0             ;
+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                                                                 ;
+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                         ; Output Port Name                                                                                                  ; Output Port Type ;
+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------+
; |ADR_ALU|result[7]                                                                                                ; |ADR_ALU|result[7]                                                                                                ; pin_out          ;
; |ADR_ALU|result[6]                                                                                                ; |ADR_ALU|result[6]                                                                                                ; pin_out          ;
; |ADR_ALU|result[5]                                                                                                ; |ADR_ALU|result[5]                                                                                                ; pin_out          ;
; |ADR_ALU|result[4]                                                                                                ; |ADR_ALU|result[4]                                                                                                ; pin_out          ;
; |ADR_ALU|result[3]                                                                                                ; |ADR_ALU|result[3]                                                                                                ; pin_out          ;
; |ADR_ALU|result[2]                                                                                                ; |ADR_ALU|result[2]                                                                                                ; pin_out          ;
; |ADR_ALU|result[1]                                                                                                ; |ADR_ALU|result[1]                                                                                                ; pin_out          ;
; |ADR_ALU|A[7]                                                                                                     ; |ADR_ALU|A[7]                                                                                                     ; out              ;
; |ADR_ALU|A[6]                                                                                                     ; |ADR_ALU|A[6]                                                                                                     ; out              ;
; |ADR_ALU|A[5]                                                                                                     ; |ADR_ALU|A[5]                                                                                                     ; out              ;
; |ADR_ALU|A[4]                                                                                                     ; |ADR_ALU|A[4]                                                                                                     ; out              ;
; |ADR_ALU|A[3]                                                                                                     ; |ADR_ALU|A[3]                                                                                                     ; out              ;
; |ADR_ALU|A[2]                                                                                                     ; |ADR_ALU|A[2]                                                                                                     ; out              ;
; |ADR_ALU|A[1]                                                                                                     ; |ADR_ALU|A[1]                                                                                                     ; out              ;
; |ADR_ALU|A[0]                                                                                                     ; |ADR_ALU|A[0]                                                                                                     ; out              ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[7]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[7]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[6]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[6]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[5]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[5]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[4]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[4]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[3]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[3]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[2]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[2]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[1]                    ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|unreg_res_node[1]                    ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~18                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~18                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~19                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~19                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~20                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~20                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~21                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~21                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~22                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~22                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~23                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~23                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~24                                 ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|_~24                                 ; out0             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[7] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[7] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[6]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[6] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[5]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[5] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[4]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[4] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[3]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[2]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[1]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; sout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cout[0]      ; cout             ;
; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |ADR_ALU|lpm_add_sub14:inst1|lpm_add_sub:lpm_add_sub_component|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; sout             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]~0                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]~0                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]~1                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]~1                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[7]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]~2                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]~2                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]~3                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]~3                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[6]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[5]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[5]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]~6                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]~6                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]~7                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]~7                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[4]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]~8                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]~8                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]~9                         ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]~9                         ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[3]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[2]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[2]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[1]                           ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[1]                           ; out0             ;
; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[0]~15                        ; |ADR_ALU|lpm_mux9:inst3|lpm_mux:lpm_mux_component|mux_afc:auto_generated|result_node[0]~15                        ; out0             ;
+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Sun Jan 21 21:09:04 2024
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off CPU_52 -c CPU_52
Info: Using vector source file "D:/CPU_52/ADR_ALUU.vwf"
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      14.29 %
Info: Number of transitions in simulation is 1357
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 146 megabytes
    Info: Processing ended: Sun Jan 21 21:09:04 2024
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


